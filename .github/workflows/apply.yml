# Required environment variables:
# - NGINX_HOME: Directory containing nginx.exe (https://nginx.org/)
# - ACME_HOME:  Directory containing wacs.exe (https://www.win-acme.com/)
# - CERT_HOME:  Directory containing certificates generated by ACME
#
# Required binaries/tools:
# - docker
# - docker compose

name: Deploy service, generate certificates, and update NGINX configuration

on:
  push:
    branches:
      - main

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    env:
      ALLINKL_KAS_LOGIN: ${{ secrets.ALLINKL_KAS_LOGIN }}
      ALLINKL_KAS_AUTH_DATA: ${{ secrets.ALLINKL_KAS_AUTH_DATA }}
    outputs:
      exitcode: ${{ steps.plan.outputs.exitcode }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - run: terraform version

      - run: terraform init

      - name: terraform plan
        id: plan
        run: | 
          terraform plan --out=tfplan --detailed-exitcode

      - name: Check Terraform plan exit code
        run: |
          echo "exitcode: ${{ steps.plan.outputs.exitcode }}"

      - name: Upload Terraform plan
        if: steps.plan.outputs.exitcode == 2
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

  terraform-apply:
    runs-on: ubuntu-latest
    environment: production
    needs: [terraform-plan]
    if: needs.terraform-plan.outputs.exitcode == 2
    env:
      ALLINKL_KAS_LOGIN: ${{ secrets.ALLINKL_KAS_LOGIN }}
      ALLINKL_KAS_AUTH_DATA: ${{ secrets.ALLINKL_KAS_AUTH_DATA }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - run: terraform version
          
      - run: terraform init

      - name: Download Terraform plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - run: terraform apply -auto-approve tfplan

  deploy:
    runs-on: hetzner2
    needs: [terraform-plan, terraform-apply]
    env:
      ALLINKL_KAS_LOGIN: ${{ secrets.ALLINKL_KAS_LOGIN }}
      ALLINKL_KAS_AUTH_DATA: ${{ secrets.ALLINKL_KAS_AUTH_DATA }}
    if: always()
    steps:
      - name: fail if terraform jobs failed
        if: ${{ needs.terraform-plan.result == 'failure' || needs.terraform-apply.result == 'failure' }}
        run: exit 1

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check versions
        run: | 
          docker version
          docker compose version
          nginx -v

      - name: Run Docker Compose
        run: docker compose up -d

      - name: Generate HTTP-only NGINX configuration
        run: ./tools/Generate-NginxConfig.ps1
        shell: pwsh

      - name: Try to apply HTTP-only NGINX configuration
        run: ./tools/Update-NginxConfig.ps1
        shell: pwsh

      - name: Generate certificates
        run: ./tools/Generate-Certificate.ps1
        shell: pwsh

      - name: Generate HTTP+HTTPS NGINX configuration
        run: ./tools/Generate-NginxConfig.ps1 -WithHttps
        shell: pwsh

      - name: Try to apply HTTP+HTTPS NGINX configuration
        run: ./tools/Update-NginxConfig.ps1
        shell: pwsh